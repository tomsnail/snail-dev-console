<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkjd.ehua.system.conf.dao.VisitAddressDao">
    
	<sql id="visitAddressColumns">
		a.id AS "id",
		a.visit_addr AS "visitAddr",
		a.http_type AS "httpType",
		a.reverse_agnc_addr AS "reverseAgncAddr",
		a.grpg_name AS "grpgName",
		a.is_release AS "isRelease",
		a.remarks AS "remarks",
		a.is_sign AS "isSign",
		a.create_by AS "createBy.id",
		a.is_auth AS "isAuth",
		a.is_def_ver AS "isDefVer",
		a.is_logger AS "isLogger",
		a.log_level AS "logLevel",
		a.ver_info AS "verInfo",
		a.is_add_user AS "isAddUser",
		a.is_add_ver AS "isAddVer",
		a.is_inner AS "isInner",
		a.real_address AS "realAddress",
		a.com_address AS "comAddress",
		a.test_address AS "testAddress",
		a.author AS "author",
		a.is_degrade AS "isDegrade",
		a.degrade_context AS "degradeContext",
		a.address_type AS "addressType",
		a.access_limit_type AS "accessLimitType",
		a.access_limit_value AS "accessLimitValue",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="visitAddressJoins">
	</sql>
    
	<select id="get" resultType="com.zkjd.ehua.system.conf.entity.VisitAddress">
		SELECT 
			<include refid="visitAddressColumns"/>
		FROM visit_address a
		<include refid="visitAddressJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.zkjd.ehua.system.conf.entity.VisitAddress">
		SELECT 
			<include refid="visitAddressColumns"/>
		FROM visit_address a
		<include refid="visitAddressJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="grpgName != null and grpgName != ''">
				AND a.grpg_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{grpgName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{grpgName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{grpgName},'%')</if>
			</if>
			<if test="remarks != null and remarks != ''">
				AND a.remarks LIKE 
					<if test="dbName == 'oracle'">'%'||#{remarks}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{remarks}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{remarks},'%')</if>
			</if>
			<if test="author != null and author != ''">
				AND a.author LIKE 
					<if test="dbName == 'oracle'">'%'||#{author}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{author}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{author},'%')</if>
			</if>
			<if test="verInfo != null and verInfo != ''">
				AND a.ver_info LIKE 
					<if test="dbName == 'oracle'">'%'||#{verInfo}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{verInfo}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{verInfo},'%')</if>
			</if>
			<if test="visitAddr != null and visitAddr != ''">
				AND a.visit_addr LIKE 
					<if test="dbName == 'oracle'">'%'||#{visitAddr}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{visitAddr}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{visitAddr},'%')</if>
			</if>
			<if test="isRelease != null and isRelease != ''">
				AND a.is_release = #{isRelease}
			</if>
			<if test="isSign != null and isSign != ''">
				AND a.is_sign = #{isSign}
			</if>
			<if test="httpType != null and httpType != ''">
				AND a.http_type = #{httpType}
			</if>
			<if test="isAuth != null and isAuth != ''">
				AND a.is_auth = #{isAuth}
			</if>
			<if test="isInner != null and isInner != ''">
				AND a.is_inner = #{isInner}
			</if>
			<if test="isDefVer != null and isDefVer != ''">
				AND a.is_def_ver = #{isDefVer}
			</if>
			<if test="isDegrade != null and isDegrade != ''">
				AND a.is_degrade = #{isDegrade}
			</if>
			<if test="addressType != null and addressType != ''">
				AND a.address_type = #{addressType}
			</if>
			<if test="logLevel != null and logLevel != ''">
				AND a.log_level = #{logLevel}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.zkjd.ehua.system.conf.entity.VisitAddress">
		SELECT 
			<include refid="visitAddressColumns"/>
		FROM visit_address a
		<include refid="visitAddressJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO visit_address(
			id,
			visit_addr,
			http_type,
			reverse_agnc_addr,
			grpg_name,
			is_release,
			remarks,
			is_sign,
			create_by,
			is_auth,
			is_def_ver,
			is_logger,
			log_level,
			create_date,
			update_by,
			ver_info,
			is_add_user,
			is_add_ver,
			is_inner,
			real_address,
			com_address,
			test_address,
			author,
			is_degrade,
			degrade_context,
			address_type,
			access_limit_type,
			access_limit_value,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{visitAddr},
			#{httpType},
			#{reverseAgncAddr},
			#{grpgName},
			#{isRelease},
			#{remarks},
			#{isSign},
			#{createBy.id},
			#{isAuth},
			#{isDefVer},
			#{isLogger},
			#{logLevel},
			#{createDate},
			#{updateBy.id},
			#{verInfo},
			#{isAddUser},
			#{isAddVer},
			#{isInner},
			#{realAddress},
			#{comAddress},
			#{testAddress},
			#{author},
			#{isDegrade},
			#{degradeContext},
			#{addressType},
			#{accessLimitType},
			#{accessLimitValue},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE visit_address SET 	
			visit_addr = #{visitAddr},
			http_type = #{httpType},
			reverse_agnc_addr = #{reverseAgncAddr},
			grpg_name = #{grpgName},
			is_release = #{isRelease},
			remarks = #{remarks},
			is_sign = #{isSign},
			is_auth = #{isAuth},
			is_def_ver = #{isDefVer},
			is_logger = #{isLogger},
			log_level = #{logLevel},
			update_by = #{updateBy.id},
			ver_info = #{verInfo},
			is_add_user = #{isAddUser},
			is_add_ver = #{isAddVer},
			is_inner = #{isInner},
			real_address = #{realAddress},
			com_address = #{comAddress},
			test_address = #{testAddress},
			author = #{author},
			is_degrade = #{isDegrade},
			degrade_context = #{degradeContext},
			address_type = #{addressType},
			access_limit_type = #{accessLimitType},
			access_limit_value = #{accessLimitValue},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE visit_address SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>